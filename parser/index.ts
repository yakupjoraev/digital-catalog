import { parseVolgograd } from './services/parser';
import { saveToFile } from './utils/fileUtils';

async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –æ–± –æ–±—ä–µ–∫—Ç–∞—Ö –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –í–æ–ª–≥–æ–≥—Ä–∞–¥–∞...');
  
  try {
    // –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö
    const objects = await parseVolgograd();
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: ${objects.length}`);
    
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    await saveToFile(objects, './data/objects.json');
    
    console.log('üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ./data/objects.json');
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const stats = {
      total: objects.length,
      byDistrict: objects.reduce((acc: any, obj) => {
        acc[obj.district] = (acc[obj.district] || 0) + 1;
        return acc;
      }, {}),
      byType: objects.reduce((acc: any, obj) => {
        acc[obj.type] = (acc[obj.type] || 0) + 1;
        return acc;
      }, {})
    };
    
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`   –í—Å–µ–≥–æ –æ–±—ä–µ–∫—Ç–æ–≤: ${stats.total}`);
    console.log('   –ü–æ —Ä–∞–π–æ–Ω–∞–º:', stats.byDistrict);
    console.log('   –ü–æ —Ç–∏–ø–∞–º:', stats.byType);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞
if (require.main === module) {
  main();
}
