#!/usr/bin/env node

import { MainParser } from './services/mainParser';
import { DatabaseIntegration } from './services/databaseIntegration';

async function testRealPDF() {
  console.log('üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ PDF —Å volgograd.ru');
  console.log('=' .repeat(60));

  const parser = new MainParser();
  
  // URL —Ä–µ–∞–ª—å–Ω–æ–≥–æ PDF —Ñ–∞–π–ª–∞
  const pdfUrl = 'https://www.volgograd.ru/vo-project/obekty-np-2025-2030/!–û–ë–™–ï–ö–¢–´%20–ë–õ–ê–ì–û–£–°–¢–†–û–ô–°–¢–í–ê%2022.05.2025.pdf';
  
  console.log(`üìÑ PDF URL: ${pdfUrl}`);

  try {
    // –ü–∞—Ä—Å–∏–º PDF —Ñ–∞–π–ª
    console.log('\nüîç –ü–∞—Ä—Å–∏–Ω–≥ PDF —Ñ–∞–π–ª–∞...');
    const objects = await parser.parsePDFByUrl(pdfUrl, '–û–±—ä–µ–∫—Ç—ã –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ 2025');

    if (objects.length > 0) {
      console.log(`\n‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: ${objects.length}`);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      const stats = parser.getStatistics(objects);
      console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:');
      console.log(`–í—Å–µ–≥–æ –æ–±—ä–µ–∫—Ç–æ–≤: ${stats.total}`);
      
      if (Object.keys(stats.byDistrict).length > 0) {
        console.log('\n–ü–æ —Ä–∞–π–æ–Ω–∞–º:');
        Object.entries(stats.byDistrict).forEach(([district, count]) => {
          console.log(`  ${district}: ${count}`);
        });
      }
      
      if (Object.keys(stats.byType).length > 0) {
        console.log('\n–ü–æ —Ç–∏–ø–∞–º:');
        Object.entries(stats.byType).forEach(([type, count]) => {
          console.log(`  ${type}: ${count}`);
        });
      }

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –æ–±—ä–µ–∫—Ç–∞ –∫–∞–∫ –ø—Ä–∏–º–µ—Ä—ã
      console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤:');
      objects.slice(0, 3).forEach((obj, index) => {
        console.log(`\n${index + 1}. ${obj.name}`);
        console.log(`   –ê–¥—Ä–µ—Å: ${obj.address}`);
        console.log(`   –†–∞–π–æ–Ω: ${obj.district}`);
        console.log(`   –¢–∏–ø: ${obj.type}`);
        console.log(`   –°—Ç–∞—Ç—É—Å: ${obj.status}`);
        if (obj.description) {
          console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${obj.description.substring(0, 100)}...`);
        }
        if (obj.area) {
          console.log(`   –ü–ª–æ—â–∞–¥—å: ${obj.area} –º¬≤`);
        }
        if (obj.budget) {
          console.log(`   –ë—é–¥–∂–µ—Ç: ${obj.budget.toLocaleString('ru-RU')} —Ä—É–±.`);
        }
      });

      // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ backend
      console.log('\nü§î –•–æ—Ç–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ backend?');
      console.log('–ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run upload-real');

    } else {
      console.log('\n‚ö†Ô∏è –û–±—ä–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ PDF —Ñ–∞–π–ª–µ');
      console.log('–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
      console.log('  - PDF —Ñ–∞–π–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log('  - –ò–∑–º–µ–Ω–∏–ª—Å—è —Ñ–æ—Ä–º–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞');
      console.log('  - –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ç–µ–∫—Å—Ç–∞');
    }

  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:', error);
    
    if (error instanceof Error) {
      if (error.message.includes('certificate')) {
        console.log('\nüí° –°–æ–≤–µ—Ç: –ü—Ä–æ–±–ª–µ–º–∞ —Å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º. –ü–∞—Ä—Å–µ—Ä –¥–æ–ª–∂–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å SSL –æ—à–∏–±–∫–∏.');
      } else if (error.message.includes('timeout')) {
        console.log('\nüí° –°–æ–≤–µ—Ç: –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      } else if (error.message.includes('404')) {
        console.log('\nüí° –°–æ–≤–µ—Ç: PDF —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL.');
      }
    }
  }

  console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
  testRealPDF();
} 