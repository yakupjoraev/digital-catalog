import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function checkUsers() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');

    const users = await prisma.user.findMany({
      select: {
        id: true,
        username: true,
        email: true,
        role: true,
        createdAt: true
      }
    });

    if (users.length === 0) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}\n`);

    users.forEach((user, index) => {
      console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${index + 1}:`);
      console.log(`   ID: ${user.id}`);
      console.log(`   Username: ${user.username}`);
      console.log(`   Email: ${user.email}`);
      console.log(`   Role: ${user.role}`);
      console.log(`   –°–æ–∑–¥–∞–Ω: ${user.createdAt.toLocaleString()}`);
      console.log('');
    });

    // –ù–∞–π–¥–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const admin = users.find(user => user.role === 'ADMIN');
    if (admin) {
      console.log('üõ°Ô∏è  –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê:');
      console.log(`üìß Email: ${admin.email}`);
      console.log(`üë§ Username: ${admin.username}`);
      console.log(`üîë –ü–∞—Ä–æ–ª—å: admin123 (–µ—Å–ª–∏ –Ω–µ –º–µ–Ω—è–ª—Å—è)`);
      console.log(`üõ†Ô∏è  Role: ${admin.role}`);
    } else {
      console.log('‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
checkUsers(); 