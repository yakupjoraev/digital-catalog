import React, { useState, useEffect } from 'react';
import type { ObjectData } from '../types';
import { objectsApi } from '../api/client';
import ObjectCard from '../components/ObjectCard';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤
const Filters: React.FC<{
  onDistrictChange: (district: string) => void;
  onTypeChange: (type: string) => void;
  onSearch: (search: string) => void;
}> = ({ onDistrictChange, onTypeChange, onSearch }) => {
  return (
    <div className="bg-white rounded-lg shadow-md p-6 mb-6">
      <h2 className="text-lg font-semibold mb-4">üîç –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫</h2>
      
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
          </label>
          <input
            type="text"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ..."
            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            onChange={(e) => onSearch(e.target.value)}
          />
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –†–∞–π–æ–Ω
          </label>
          <select
            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            onChange={(e) => onDistrictChange(e.target.value)}
          >
            <option value="">–í—Å–µ —Ä–∞–π–æ–Ω—ã</option>
            <option value="–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π">–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π</option>
            <option value="–î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π">–î–∑–µ—Ä–∂–∏–Ω—Å–∫–∏–π</option>
            <option value="–í–æ—Ä–æ—à–∏–ª–æ–≤—Å–∫–∏–π">–í–æ—Ä–æ—à–∏–ª–æ–≤—Å–∫–∏–π</option>
            <option value="–°–æ–≤–µ—Ç—Å–∫–∏–π">–°–æ–≤–µ—Ç—Å–∫–∏–π</option>
            <option value="–¢—Ä–∞–∫—Ç–æ—Ä–æ–∑–∞–≤–æ–¥—Å–∫–∏–π">–¢—Ä–∞–∫—Ç–æ—Ä–æ–∑–∞–≤–æ–¥—Å–∫–∏–π</option>
            <option value="–ö—Ä–∞—Å–Ω–æ–∞—Ä–º–µ–π—Å–∫–∏–π">–ö—Ä–∞—Å–Ω–æ–∞—Ä–º–µ–π—Å–∫–∏–π</option>
            <option value="–ö–∏—Ä–æ–≤—Å–∫–∏–π">–ö–∏—Ä–æ–≤—Å–∫–∏–π</option>
            <option value="–ö—Ä–∞—Å–Ω–æ–æ–∫—Ç—è–±—Ä—å—Å–∫–∏–π">–ö—Ä–∞—Å–Ω–æ–æ–∫—Ç—è–±—Ä—å—Å–∫–∏–π</option>
          </select>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –¢–∏–ø –æ–±—ä–µ–∫—Ç–∞
          </label>
          <select
            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            onChange={(e) => onTypeChange(e.target.value)}
          >
            <option value="">–í—Å–µ —Ç–∏–ø—ã</option>
            <option value="–ø–∞—Ä–∫">üå≥ –ü–∞—Ä–∫</option>
            <option value="—Å–∫–≤–µ—Ä">üåø –°–∫–≤–µ—Ä</option>
            <option value="–¥–µ—Ç—Å–∫–∞—è –ø–ª–æ—â–∞–¥–∫–∞">üé† –î–µ—Ç—Å–∫–∞—è –ø–ª–æ—â–∞–¥–∫–∞</option>
            <option value="—Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞">‚öΩ –°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞</option>
            <option value="–Ω–∞–±–µ—Ä–µ–∂–Ω–∞—è">üåä –ù–∞–±–µ—Ä–µ–∂–Ω–∞—è</option>
            <option value="—Ñ–æ–Ω—Ç–∞–Ω">‚õ≤ –§–æ–Ω—Ç–∞–Ω</option>
            <option value="–ø–ª–æ—â–∞–¥—å">üèõÔ∏è –ü–ª–æ—â–∞–¥—å</option>
            <option value="–±—É–ª—å–≤–∞—Ä">üõ£Ô∏è –ë—É–ª—å–≤–∞—Ä</option>
            <option value="–¥—Ä—É–≥–æ–µ">üìç –î—Ä—É–≥–æ–µ</option>
          </select>
        </div>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
const Stats: React.FC<{ objects: ObjectData[] }> = ({ objects }) => {
  const stats = {
    total: objects.length,
    byDistrict: objects.reduce((acc, obj) => {
      acc[obj.district] = (acc[obj.district] || 0) + 1;
      return acc;
    }, {} as { [key: string]: number }),
    byType: objects.reduce((acc, obj) => {
      acc[obj.type] = (acc[obj.type] || 0) + 1;
      return acc;
    }, {} as { [key: string]: number }),
    byStatus: objects.reduce((acc, obj) => {
      acc[obj.status] = (acc[obj.status] || 0) + 1;
      return acc;
    }, {} as { [key: string]: number }),
  };

  return (
    <div className="bg-white rounded-lg shadow-md p-6 mb-6">
      <h2 className="text-lg font-semibold mb-4">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
      
      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
        <div className="text-center">
          <div className="text-2xl font-bold text-blue-600">{stats.total}</div>
          <div className="text-sm text-gray-600">–í—Å–µ–≥–æ –æ–±—ä–µ–∫—Ç–æ–≤</div>
        </div>
        
        <div className="text-center">
          <div className="text-2xl font-bold text-green-600">{stats.byStatus['–∞–∫—Ç–∏–≤–Ω—ã–π'] || 0}</div>
          <div className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã—Ö</div>
        </div>
        
        <div className="text-center">
          <div className="text-2xl font-bold text-yellow-600">{stats.byStatus['–Ω–∞ —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'] || 0}</div>
          <div className="text-sm text-gray-600">–ù–∞ —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</div>
        </div>
        
        <div className="text-center">
          <div className="text-2xl font-bold text-purple-600">{stats.byStatus['–ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è'] || 0}</div>
          <div className="text-sm text-gray-600">–ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è</div>
        </div>
      </div>
    </div>
  );
};

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const HomePage: React.FC = () => {
  const [objects, setObjects] = useState<ObjectData[]>([]);
  const [filteredObjects, setFilteredObjects] = useState<ObjectData[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [filters, setFilters] = useState({
    district: '',
    type: '',
    search: '',
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    const loadObjects = async () => {
      try {
        setLoading(true);
        const response = await objectsApi.getAll();
        if (response.success) {
          setObjects(response.data);
          setFilteredObjects(response.data);
        } else {
          setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
        }
      } catch (err) {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
        console.error(err);
      } finally {
        setLoading(false);
      }
    };

    loadObjects();
  }, []);

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  useEffect(() => {
    let filtered = objects;

    if (filters.district) {
      filtered = filtered.filter(obj => obj.district === filters.district);
    }

    if (filters.type) {
      filtered = filtered.filter(obj => obj.type === filters.type);
    }

    if (filters.search) {
      const searchLower = filters.search.toLowerCase();
      filtered = filtered.filter(obj =>
        obj.name.toLowerCase().includes(searchLower) ||
        obj.description.toLowerCase().includes(searchLower) ||
        obj.address.toLowerCase().includes(searchLower)
      );
    }

    setFilteredObjects(filtered);
  }, [objects, filters]);

  const handleDistrictChange = (district: string) => {
    setFilters(prev => ({ ...prev, district }));
  };

  const handleTypeChange = (type: string) => {
    setFilters(prev => ({ ...prev, type }));
  };

  const handleSearch = (search: string) => {
    setFilters(prev => ({ ...prev, search }));
  };

  if (loading) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="flex justify-center items-center h-64">
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞...</p>
          </div>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
          <strong>–û—à–∏–±–∫–∞:</strong> {error}
          <p className="mt-2">–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±—ç–∫–µ–Ω–¥ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:5000</p>
        </div>
      </div>
    );
  }

  return (
    <main className="container mx-auto px-4 py-8">
      <Stats objects={objects} />
      
      <Filters
        onDistrictChange={handleDistrictChange}
        onTypeChange={handleTypeChange}
        onSearch={handleSearch}
      />

      <div className="mb-6">
        <h2 className="text-xl font-semibold text-gray-800 mb-4">
          üìç –û–±—ä–µ–∫—Ç—ã –±–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ({filteredObjects.length})
        </h2>
        
        {filteredObjects.length === 0 ? (
          <div className="text-center py-12">
            <p className="text-gray-500 text-lg">
              {objects.length === 0 ? '–û–±—ä–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã' : '–ù–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–∞–º'}
            </p>
          </div>
        ) : (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredObjects.map((object) => (
              <ObjectCard key={object.id} object={object} />
            ))}
          </div>
        )}
      </div>
    </main>
  );
};

export default HomePage; 